function fig_coordinates
do_text=1;
fig = figure('position',[100,100,1000,1000]);
ax = subaxis(1,1,1,'margin',0,'padding',0);


colors = [170,39,61; ...
          39,61,170; ...
          ]/255;

hold(ax);

set(ax, 'visible','off');
set(fig,'renderer','opengl');
set(fig,'color',[1 1 1]);

%plane
plane_x = 1.5*[1, -1, -1, 1];
plane_y = 1*[1, 1, -1, -1];
plane_z = [0, 0, 0, 0];
plane_c = [0, 0, 0, 0];
%fill3(plane_x, plane_y, plane_z, plane_c, ...
%    'FaceColor', [.9,.9,.9], ...
%    'FaceAlpha', .6, ...
%    'EdgeColor', [.5,.5,.5], ...
%    'LineWidth', 5 ...
%    );


% shear

S = [0,1, 0; 0,0,0;0,0,0];


x0s = [...
    zeros(1,6); ...
    linspace(-.7,.7,6); ...
    .1*ones(1,6)
    ];
color = colors(2,:);
shear_offset = 1.3;
for x0i = 1:6

    x0 = x0s(:, x0i);
    N = 500;
    ts = linspace(0,1., N);
    strainline = zeros(3,N);
    for k=1:N
        t = ts(k);
        M = expm(S*t);
        strainline(:, k) = [shear_offset;0;0]+M*x0;
    end
    
    %plot3(strainline(1,:),strainline(2,:),strainline(3,:), ...
    %'LineWidth', 5, ...
    %'Color', [.3,.6,.8] ...
    %);
    [x,y,z] = tubeplot(strainline,...
    0.01, ... % radius
    24);
    surf(x,y,z,...
    'FaceColor', color,...
    'LineStyle', 'none');    

    %firstx = strainline(:, 1);
    %firstv = S*firstx;
    %mArrow3(firstx-.35*firstv,firstx, ...
    %    'facealpha', 1, ...
    %    'color',color, ...
    %    'stemWidth', 0.02,...
    %    'tipWidth', 0.039); 


    lastx = strainline(:, end);
    lastv = S*lastx;
    lastv = lastv/norm(lastv);
    mArrow3(lastx,lastx+lastv*.15, ...
        'facealpha', 1, ...
        'color',color, ...
        'stemWidth', 0.01,...
        'tipWidth', 0.02); 
end


% shear baseline

[x,y,z] = tubeplot([shear_offset,-.75,0.1;shear_offset,.75,0.1]',...
0.005, ... % radius
24);
surf(x,y,z,...
'FaceColor', [.2,.2,.2],...
'LineStyle', 'none');    


% e1 e2 e3
e_offset = 0;
e_length = 1.5;
color = [.1,.1,.1];
mArrow3([0,0,e_offset+.1],[0,0,e_offset+e_length-.5], ...
    'facealpha', 1, ...
    'color', color, ...
    'stemWidth', 0.01,...
    'tipWidth', 0.03); 
if do_text
    text(-.1,0.1,e_length-.6,...
        '$\hat {\mathbf z}$ (and $\hat {\mathbf \Omega}$)',...
        'FontName', 'Helvetica', ...
        'FontUnit', 'points', ...
        'FontSize', 20, ...
        'FontWeight', 'bold', ...
        'Interpreter', 'latex');
end
mArrow3([e_offset,0,.1],[e_offset+e_length+.7,0,.1], ...
    'facealpha', 1, ...
    'color', color, ...
    'stemWidth', 0.01,...
    'tipWidth', 0.03); 
if do_text
    text(2.5,0.2,.2,...
        '$\hat{\mathbf x}$',...
        'FontName', 'Helvetica', ...
        'FontUnit', 'points', ...
        'FontSize', 20, ...
        'FontWeight', 'bold', ...
        'Interpreter', 'latex');
end

mArrow3([0,e_offset,.1],[0,(e_offset+e_length)-.3,.1], ...
    'facealpha', 1, ...
    'color', color, ...
    'stemWidth', 0.01,...
    'tipWidth', 0.03); 


if do_text
    text(-.2,1.5-.3,.1,...
        '$\hat {\mathbf y}$',...
        'FontName', 'Helvetica', ...
        'FontUnit', 'points', ...
        'FontSize', 20, ...
        'FontWeight', 'bold', ...
        'Interpreter', 'latex');
end


% n vector

theta = pi/3;
phi = pi/4;
r = 1.5;
nx = r*sin(theta)*cos(phi);
ny = r*sin(theta)*sin(phi);
nz = .1+r*cos(theta);
color = colors(1,:);
mArrow3([0,0,.1],[nx,ny,nz], ...
    'facealpha', 1, ...
    'color', color, ...
    'stemWidth', 0.01,...
    'tipWidth', 0.02); 

%mArrow3([0,0,.1],[nx,ny,.1], ...
%    'facealpha', 1, ...
%    'color', [.4,.4,.4], ...
%    'stemWidth', 0.01,...
%    'tipWidth', 0.02); 

[x,y,z] = tubeplot([0,0,.1;nx,ny,.1]',...
0.005, ... % radius
24);
surf(x,y,z,...
'FaceColor', [.4,.4,.4],...
'LineStyle', 'none');  
[x,y,z] = tubeplot([nx,ny,nz;nx,ny,.1]',...
0.005, ... % radius
24);
surf(x,y,z,...
'FaceColor', [.4,.4,.4],...
'LineStyle', 'none');  

arc_phi = linspace(0,phi,25);
arc_xs = .4*cos(arc_phi);
arc_ys = .4*sin(arc_phi);
arc_zs = 0*arc_phi + .1;
[x,y,z] = tubeplot([arc_xs;arc_ys;arc_zs],...
0.005, ... % radius
24);
surf(x,y,z,...
'FaceColor', [.4,.4,.4],...
'LineStyle', 'none');  

arc_phi = linspace(0,theta,25);
arc_xs = .4*cos(phi)*sin(arc_phi);
arc_ys = .4*sin(phi)*sin(arc_phi);
arc_zs = .1+.4*cos(arc_phi);
[x,y,z] = tubeplot([arc_xs;arc_ys;arc_zs],...
0.005, ... % radius
24);
surf(x,y,z,...
'FaceColor', [.4,.4,.4],...
'LineStyle', 'none');  


if do_text
    text(nx,ny,nz+.1,...
        '$\hat {\mathbf n}$',...
        'FontName', 'Helvetica', ...
        'FontUnit', 'points', ...
        'FontSize', 20, ...
        'FontWeight', 'bold', ...
        'Interpreter', 'latex');
    
    
    text(.6,.2,.1,...
        '$\varphi$',...
        'FontName', 'Helvetica', ...
        'FontUnit', 'points', ...
        'FontSize', 20, ...
        'FontWeight', 'bold', ...
        'Interpreter', 'latex');
    
    text(.1,.15,.45,...
        '$\theta$',...
        'FontName', 'Helvetica', ...
        'FontUnit', 'points', ...
        'FontSize', 20, ...
        'FontWeight', 'bold', ...
        'Interpreter', 'latex');    
end



% particle

%rod
%r = [-.2,.2,.7]';
%n = [.1,.1,1];
%n=n/norm(n);
%[x,y,z,c] = get_ellipsoid_meshdata(r,n,10);
%surf(x,y,z,c,'LineStyle','none', 'facecolor',[.9,.3,.05]);


material dull;

% axis
axis(0.8*[-2,2,-2,2,-2,2])
axis equal;

view(106,20);
camlight('headlight', 'infinite')
camlight('left', 'infinite')

lighting flat


aafig = myaa()
close(fig);



end

function [x,y,z,c] = get_ellipsoid_meshdata(r, n, lambda)

        particle_size = 0.1;
        if lambda > 1
            particle_size = 0.2;
        end
        
        R = vrrotvec2mat(vrrotvec([0,0,1],n));
        rx = particle_size;
        ry = particle_size;
        rz = particle_size;
        if lambda > 1
            rx = rx / lambda;
            ry = ry / lambda;
        else
            rz = rz*lambda;
        end
        [x,y,z] = ellipsoid(0,0,0,rx, ry, rz,100);
        c = double(z > 0) + 1;
        points = [x(:), y(:), z(:)]';
        points = R*points;

        x = r(1) + reshape(points(1,:), size(x));
        y = r(2) + reshape(points(2,:), size(y));
        z = r(3) + reshape(points(3,:), size(z));


        
end